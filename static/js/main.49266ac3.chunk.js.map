{"version":3,"sources":["components/About.js","components/Alert.js","components/Nav.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","backgroundColor","color","modeStyle","setModeStyle","modeBtnText","setModeBtnText","className","style","id","type","onClick","border","Alert","props","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalized","msg","Navbar","mode","to","title","aboutText","toggleMode","htmlFor","btnMode","TextForm","text","setText","line","trim","split","join","length","heading","placeholder","value","onChange","event","target","rows","newText","showAlert","arr","index","w","con","j","navigator","clipboard","writeText","defaultProps","App","setMode","setAlert","message","setTimeout","modeColor","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49266ac3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n\r\n    const [modeStyle, setModeStyle] = useState({\r\n        backgroundColor: \"white\",\r\n        color: \"black\"\r\n    })\r\n    const [modeBtnText, setModeBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const modeChange = () => {\r\n        if (modeStyle.color === 'black') {\r\n            setModeStyle({\r\n                backgroundColor: \"black\",\r\n                color: \"white\",\r\n                border:\"0.4px solid white\"\r\n            })\r\n            setModeBtnText(\"Enable Light Mode\")\r\n        } else {\r\n            setModeStyle(\r\n                {\r\n                    backgroundColor: \"white\",\r\n                    color: \"black\"\r\n                }\r\n            )\r\n            setModeBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={modeStyle}>\r\n                <h1>About Us</h1>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    {/* <div className=\"accordion\" id=\"accordionExample\"> */}\r\n                    <div className=\"accordion-item\" style={modeStyle}>\r\n                        {/* <div className=\"accordion-item\"> */}\r\n\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\" >\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={modeStyle}>\r\n                                Accordion Item #1\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n\r\n                            <div className=\"accordion-body\">\r\n                                <strong>Lorem ipsum dolor, sit amet </strong> Lorem ipsum dolor sit amet consectetur, adipisicing elit. Praesentium, doloremque distinctio illo provid Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem, soluta repellat! ent accusamus aut eveniet veritatis, adipisci quis, alias recusandae omnis? Molestias, b\r\n                                <code>.accordion-body</code> eatae.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={modeStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={modeStyle}>\r\n\r\n                                Accordion Item #2\r\n                            </button>\r\n                        </h2>\r\n\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n\r\n                            <div className=\"accordion-body\">\r\n                                <strong>Lorem ipsum dolor, sit amet </strong> Lorem ipsum dolor sit amet consectetur, adip Lorem ipsum dolor sit amet consectetur adipisicing elit. Amet culpa ratione earum! isicing elit. Praesentium, doloremque distinctio illo provident accusamus aut eveniet veritatis, adipisci quis, alias recusandae omnis? Molestias, b\r\n                                <code>.accordion-body</code> eatae.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={modeStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={modeStyle}>\r\n                                Accordion Item #3\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>Lorem ipsum dolor, sit amet </strong> Lorem ipsum dolor sit amet consectetur, adipisicing elit. Praesentium, doloremque distinctio illo pro Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi, quisquam. vident accusamus aut eveniet veritatis, adipisci quis, alias recusandae omnis? Molestias, b\r\n                                <code>.accordion-body</code> eatae.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <button type=\"button\" onClick={modeChange} className=\"my-3 mx-1 btn btn-primary\">{modeBtnText}</button>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalized = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalized(props.alert.type)} :</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n    return (\r\n\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                    <div className={`mx-2 form-check form-switch text-${props.mode === \"dark\" ? 'light':'dark'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault1\" onClick={() => props.toggleMode(\"#270606\")} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault1\">Red</label>\r\n                    </div>\r\n                    <div className={`mx-2 form-check form-switch text-${props.mode === \"dark\" ? 'light':'dark'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault2\" onClick={() => props.toggleMode(\"#062706\")} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault2\">Green</label>\r\n                    </div>\r\n                    <div className={`mx-2 form-check form-switch text-${props.mode === \"dark\" ? 'light':'dark'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault3\" onClick={() => props.toggleMode(\"#1F0627\")} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault3\">Purple</label>\r\n                    </div>\r\n                    <div className={`mx-2 form-check form-switch text-${props.mode === \"dark\" ? 'light':'dark'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault4\" onClick={() => props.toggleMode(\"#033c61\")} />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault4\">{props.btnMode}</label>\r\n                    </div>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes =\r\n{\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"Set About us here\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper case.\" ,\"success\")\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case.\" ,\"success\")\r\n    }\r\n    const handleClText = () => {\r\n        let newText = \"\"\r\n        setText(newText)\r\n    }\r\n    const handleCpText = () => {\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"Copied!\" ,\"primary\")\r\n    }\r\n    \r\n    const handleExtractMail = () => {\r\n        let newText = text.split(\" \")\r\n        let arr = \"\"\r\n        for (let index = 0; index < newText.length; index++) {\r\n            let w = newText[index];\r\n            let con = false;\r\n\r\n            for (let j = 1; j < w.length; j++) {\r\n                if (w[j] === \"@\") {\r\n                    con = true;\r\n                }\r\n            }\r\n            if (con && (w[w.length - 4] === '.')) {\r\n                arr = arr + \" \" + w\r\n            }\r\n        }\r\n        arr = arr.trim()\r\n        setText(arr);\r\n    }\r\n    let line = text.trim()\r\n    line = line.split(/[ ]+/);\r\n    line = line.join(\" \");\r\n\r\n    let word = line.split(\" \").length;\r\n    if (line.length === 0) {\r\n        word = 0;\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea placeholder=\"Enter your text\" className=\"form-control\" value={text} id=\"exampleFormControlTextarea1 textBox\" onChange={handleOnChange} rows=\"7\" style={{backgroundColor: props.mode === \"dark\" ? \"grey\":\"white\",color: props.mode === \"dark\" ? \"white\" : \"black\"}} ></textarea>\r\n                    <button type=\"button\" onClick={handleUpClick} className=\"my-3 mx-1 btn btn-primary\">Convert to upper Case</button>\r\n                    <button type=\"button\" onClick={handleLoClick} className=\"my-3 mx-1 btn btn-primary\">Convert to lower Case</button>\r\n                    <button type=\"button\" onClick={handleExtractMail} className=\"my-3 mx-1 btn btn-primary\">Find emails</button>\r\n                    <button type=\"button\" onClick={handleClText} className=\"my-3 mx-1 btn btn-primary\">Clear</button>\r\n                    <button type=\"button\" onClick={handleCpText} className=\"my-3 mx-1 btn btn-primary\">Copy</button>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h2>Your Text Summery</h2>\r\n                <p>{word} words and {text.length} charecters</p>\r\n                <p>You need {word * 0.192} seconds to read this text</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter some text to preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\n// import './App.css';\nimport React, { useState } from 'react'\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Nav';\nimport TextForm from './components/TextForm';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [modeBtnText, setModeBtnText] = useState(\"Enable Dark Mode\")\n\n  const changeMode = (modeColor) => {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      setModeBtnText(\"Enable Mode: light\");\n      document.body.style.color = \"white\";\n      document.body.style.backgroundColor = modeColor;\n      showAlert(\"Change to Dark mode\", 'success')\n      document.title = \"Text Manipulator - Dark\"\n      // setInterval(() => {\n      //   document.title = \"Text Manipulator is amayzing\"\n      // }, 1000);\n      // setInterval(() => {\n      //   document.title = \"Install Text Manipulator Now!\"\n      // }, 1500);\n    } else {\n      setMode(\"light\")\n      setModeBtnText(\"Enable Mode: Dark\")\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Change to Light mode\", 'success')\n      document.title = \"Text Manipulator - Light\"\n    }\n  }\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Text Utils\" aboutText=\"About Us\" mode={mode} btnMode={modeBtnText} toggleMode={changeMode} />\n        <Alert alert={alert} />\n\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            <TextForm heading=\"Enter the text to analizy below\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}